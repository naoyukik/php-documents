/**
 * (PHP 4, PHP 5, PHP 7)<br/>
 * @link http://php.net/manual/en/function.posix-getrlimit.php
 * @return array 各リソースに関する制限値を含む連想配列を返します。
 * 個々のリミット値には、ソフトリミットとハードリミットがあります。
 * 返される制限の一覧
 * 制限の名前
 * 制限についての説明
 * core
 * コアファイルの最大サイズ。0 の場合はコアファイルを作成しません。
 * コアファイルのサイズがこの値を超えると、
 * このサイズまで切り詰められます。
 * totalmem
 * プロセスのメモリの最大サイズを表すバイト数。
 * virtualmem
 * プロセスの仮想メモリの最大サイズを表すバイト数。
 * data
 * プロセスのデータセグメントの最大サイズを表すバイト数。
 * stack
 * プロセスのスタックの最大サイズを表すバイト数。
 * rss
 * RAM 上の仮想ページの最大数。
 * maxproc
 * 呼び出し元のプロセスの実ユーザー ID で作成できるプロセスの最大数。
 * memlock
 * RAM 内にロックできるメモリの最大バイト数。
 * cpu
 * そのプロセスが使用できる CPU 時間。
 * filesize
 * そのプロセスが使用できるデータセグメントの最大サイズを表すバイト数。
 * openfiles
 * オープンできるファイル記述子の最大値よりひとつ大きい値。返される制限の一覧
 * 制限の名前
 * 制限についての説明
 * core
 * コアファイルの最大サイズ。0 の場合はコアファイルを作成しません。
 * コアファイルのサイズがこの値を超えると、
 * このサイズまで切り詰められます。
 * totalmem
 * プロセスのメモリの最大サイズを表すバイト数。
 * virtualmem
 * プロセスの仮想メモリの最大サイズを表すバイト数。
 * data
 * プロセスのデータセグメントの最大サイズを表すバイト数。
 * stack
 * プロセスのスタックの最大サイズを表すバイト数。
 * rss
 * RAM 上の仮想ページの最大数。
 * maxproc
 * 呼び出し元のプロセスの実ユーザー ID で作成できるプロセスの最大数。
 * memlock
 * RAM 内にロックできるメモリの最大バイト数。
 * cpu
 * そのプロセスが使用できる CPU 時間。
 * filesize
 * そのプロセスが使用できるデータセグメントの最大サイズを表すバイト数。
 * openfiles
 * オープンできるファイル記述子の最大値よりひとつ大きい値。制限の名前
 * 制限についての説明
 * core
 * コアファイルの最大サイズ。0 の場合はコアファイルを作成しません。
 * コアファイルのサイズがこの値を超えると、
 * このサイズまで切り詰められます。
 * totalmem
 * プロセスのメモリの最大サイズを表すバイト数。
 * virtualmem
 * プロセスの仮想メモリの最大サイズを表すバイト数。
 * data
 * プロセスのデータセグメントの最大サイズを表すバイト数。
 * stack
 * プロセスのスタックの最大サイズを表すバイト数。
 * rss
 * RAM 上の仮想ページの最大数。
 * maxproc
 * 呼び出し元のプロセスの実ユーザー ID で作成できるプロセスの最大数。
 * memlock
 * RAM 内にロックできるメモリの最大バイト数。
 * cpu
 * そのプロセスが使用できる CPU 時間。
 * filesize
 * そのプロセスが使用できるデータセグメントの最大サイズを表すバイト数。
 * openfiles
 * オープンできるファイル記述子の最大値よりひとつ大きい値。制限の名前
 * 制限についての説明制限の名前
 * 制限についての説明制限の名前制限についての説明core
 * コアファイルの最大サイズ。0 の場合はコアファイルを作成しません。
 * コアファイルのサイズがこの値を超えると、
 * このサイズまで切り詰められます。
 * totalmem
 * プロセスのメモリの最大サイズを表すバイト数。
 * virtualmem
 * プロセスの仮想メモリの最大サイズを表すバイト数。
 * data
 * プロセスのデータセグメントの最大サイズを表すバイト数。
 * stack
 * プロセスのスタックの最大サイズを表すバイト数。
 * rss
 * RAM 上の仮想ページの最大数。
 * maxproc
 * 呼び出し元のプロセスの実ユーザー ID で作成できるプロセスの最大数。
 * memlock
 * RAM 内にロックできるメモリの最大バイト数。
 * cpu
 * そのプロセスが使用できる CPU 時間。
 * filesize
 * そのプロセスが使用できるデータセグメントの最大サイズを表すバイト数。
 * openfiles
 * オープンできるファイル記述子の最大値よりひとつ大きい値。core
 * コアファイルの最大サイズ。0 の場合はコアファイルを作成しません。
 * コアファイルのサイズがこの値を超えると、
 * このサイズまで切り詰められます。coreコアファイルの最大サイズ。0 の場合はコアファイルを作成しません。
 * コアファイルのサイズがこの値を超えると、
 * このサイズまで切り詰められます。totalmem
 * プロセスのメモリの最大サイズを表すバイト数。totalmemプロセスのメモリの最大サイズを表すバイト数。virtualmem
 * プロセスの仮想メモリの最大サイズを表すバイト数。virtualmemプロセスの仮想メモリの最大サイズを表すバイト数。data
 * プロセスのデータセグメントの最大サイズを表すバイト数。dataプロセスのデータセグメントの最大サイズを表すバイト数。stack
 * プロセスのスタックの最大サイズを表すバイト数。stackプロセスのスタックの最大サイズを表すバイト数。rss
 * RAM 上の仮想ページの最大数。rssRAM 上の仮想ページの最大数。maxproc
 * 呼び出し元のプロセスの実ユーザー ID で作成できるプロセスの最大数。maxproc呼び出し元のプロセスの実ユーザー ID で作成できるプロセスの最大数。memlock
 * RAM 内にロックできるメモリの最大バイト数。memlockRAM 内にロックできるメモリの最大バイト数。cpu
 * そのプロセスが使用できる CPU 時間。cpuそのプロセスが使用できる CPU 時間。filesize
 * そのプロセスが使用できるデータセグメントの最大サイズを表すバイト数。filesizeそのプロセスが使用できるデータセグメントの最大サイズを表すバイト数。openfiles
 * オープンできるファイル記述子の最大値よりひとつ大きい値。openfilesオープンできるファイル記述子の最大値よりひとつ大きい値。
 */
function posix_getrlimit() {}